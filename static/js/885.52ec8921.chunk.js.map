{"version":3,"file":"static/js/885.52ec8921.chunk.js","mappings":"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","sources":["webpack://slimmom/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.css?4bdd","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slimmom/./src/pages/CalculatorPage/CalculatorPage.module.css?9a12","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerForm\":\"DailyCaloriesForm_containerForm__sbOXU\",\"form\":\"DailyCaloriesForm_form__Ri71L\",\"title\":\"DailyCaloriesForm_title__VbQQ2\",\"valuesBox\":\"DailyCaloriesForm_valuesBox__32CZz\",\"valueLabel\":\"DailyCaloriesForm_valueLabel__U6ua0\",\"tooltiptext\":\"DailyCaloriesForm_tooltiptext__mrHAb\",\"field\":\"DailyCaloriesForm_field__CVpZy\",\"radioField\":\"DailyCaloriesForm_radioField__MpUTL\",\"buttonBox\":\"DailyCaloriesForm_buttonBox__UXzvm\",\"listFields\":\"DailyCaloriesForm_listFields__Jhozx\"};","import { Formik } from 'formik';\nimport { Field, Form } from 'formik';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport Button from '../Button/Button';\nimport css from './DailyCaloriesForm.module.css';\n\nexport default function DailyCaloriesForm({\n  onFormSubmit,\n  userInfo = false,\n  isCleanUserInfo = false,\n  isShowNoti = true,\n}) {\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [selectedBldType, setSelectedBlbType] = useState(() =>\n    userInfo ? userInfo.bloodType : '1'\n  );\n\n  const onBldTypeSelect = event => {\n    setSelectedBlbType(event.target.value);\n  };\n\n  const inivialValues = userInfo\n    ? userInfo\n    : {\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n      };\n\n  const validate = values => {\n    const { height, age, desiredWeight, currentWeight, bloodType } = values;\n    if (!height || height < 100 || height > 250) return;\n    if (!age || age < 18 || age > 100) return;\n    if (!currentWeight || currentWeight < 45 || currentWeight > 500) return;\n    if (!desiredWeight || desiredWeight < 45 || desiredWeight > 500) return;\n    if (!bloodType) values.bloodType = selectedBldType;\n\n    setIsFormValid(true);\n  };\n\n  return (\n    <Formik\n      initialValues={inivialValues}\n      validate={validate}\n      onSubmit={(values, { resetForm }) => {\n        if (!isFormValid) return;\n\n        const user = {\n          userData: {\n            height: String(values.height),\n            age: String(values.age),\n            currentWeight: String(values.currentWeight),\n            desiredWeight: String(values.desiredWeight),\n            bloodType: String(values.bloodType),\n          },\n        };\n\n        if (onFormSubmit(user) && isShowNoti) {\n          toast.success('Start losing weight!');\n\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n\n        onFormSubmit(user);\n\n        if (isCleanUserInfo) {\n          resetForm();\n        }\n      }}\n    >\n      <div className={css.containerForm}>\n        <p className={css.title}>\n          Calculate your daily calorie intake right now\n        </p>\n        <Form className={css.form}>\n          <div className={css.valuesBox}>\n            <label className={css.valueLabel} htmlFor=\"height\">\n              Height\n              <Field\n                className={css.field}\n                pattern=\"[0-9]{3}\"\n                required\n                id=\"height\"\n                type=\"number\"\n                name=\"height\"\n                min=\"100\"\n                max=\"250\"\n              />\n            </label>\n            <label className={css.valueLabel} htmlFor=\"age\">\n              Age\n              <Field\n                className={css.field}\n                pattern=\"[0-9]{2}\"\n                id=\"age\"\n                required\n                type=\"number\"\n                name=\"age\"\n                min=\"18\"\n                max=\"100\"\n              />\n            </label>\n            <label className={css.valueLabel} htmlFor=\"currentWeight\">\n              Current weight\n              <Field\n                className={css.field}\n                pattern=\"[0-9]{2,3}\"\n                required\n                id=\"currentWeight\"\n                type=\"number\"\n                name=\"currentWeight\"\n                min=\"45\"\n                max=\"500\"\n              />\n            </label>\n          </div>\n          <div className={css.valuesBox}>\n            <label className={css.valueLabel} htmlFor=\"desiredWeight\">\n              Desired weight\n              <Field\n                className={css.field}\n                pattern=\"[0-9]{2,3}\"\n                id=\"desiredWeight\"\n                required\n                name=\"desiredWeight\"\n                type=\"number\"\n                min=\"46\"\n                max=\"150\"\n              />\n            </label>\n            <label className={css.valueLabel} htmlFor=\"bloodType\" required>\n              <p style={{ marginBottom: '20px' }}>Blood Type</p>\n              <ul className={css.listFields}>\n                <li>\n                  <Field\n                    className={css.radioField}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    id=\"blood-inp-1\"\n                    value={1}\n                    checked={selectedBldType === '1'}\n                    onClick={onBldTypeSelect}\n                  />\n                  <label htmlFor=\"blood-inp-1\">1</label>\n                </li>\n                <li>\n                  <Field\n                    className={css.radioField}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    id=\"blood-inp-2\"\n                    value={2}\n                    checked={selectedBldType === '2'}\n                    onClick={onBldTypeSelect}\n                  />\n                  <label htmlFor=\"blood-inp-2\">2</label>\n                </li>\n                <li>\n                  <Field\n                    className={css.radioField}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    id=\"blood-inp-3\"\n                    value={3}\n                    checked={selectedBldType === '3'}\n                    onClick={onBldTypeSelect}\n                  />\n                  <label htmlFor=\"blood-inp-3\">3</label>\n                </li>\n                <li>\n                  <Field\n                    className={css.radioField}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    id=\"blood-inp-4\"\n                    checked={selectedBldType === '4'}\n                    onClick={onBldTypeSelect}\n                    value={4}\n                  />\n                  <label htmlFor=\"blood-inp-4\">4</label>\n                </li>\n              </ul>\n            </label>\n          </div>\n\n          <div className={css.buttonBox}>\n            <Button type={'submit'} btnText=\"Start losing weight\" />\n          </div>\n        </Form>\n      </div>\n    </Formik>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CalculatorPage_section__Wyr9N\",\"containerForm\":\"CalculatorPage_containerForm__AbbW4\",\"sidebarBox\":\"CalculatorPage_sidebarBox__5oxDa\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DailyCaloriesForm from '../../components/DailyCaloriesForm/DailyCaloriesForm';\nimport SideBar from '../../components/SideBar/SideBar';\nimport { getUsersAdvice } from '../../redux/auth/auth-operations';\nimport { authSelectors } from '../../redux/auth';\nimport Header from '../../components/Header/Header';\nimport { diaryPerDayOperation, updateDate } from '../../redux/diaryPerDay';\nimport MobileSidebar from '../../components/MobileSidebar/MobileSidebar';\nimport css from './CalculatorPage.module.css';\n\nconst CalculatorPage = () => {\n  const dispatch = useDispatch();\n  const currentDate = new Date().toLocaleDateString();\n  const userInfo = useSelector(authSelectors.getUserInfo);\n\n  useEffect(() => {\n    dispatch(updateDate(currentDate));\n    dispatch(diaryPerDayOperation.actionGetProducts({ date: currentDate }));\n  }, [currentDate, dispatch]);\n\n  const submitForm = async data => {\n    dispatch(getUsersAdvice(data));\n  };\n\n  return (\n    <>\n      <Header localPage=\"CalculatorPage\" />\n      <div className={css.section}>\n        <MobileSidebar />\n        <div className={css.containerForm}>\n          <DailyCaloriesForm\n            onFormSubmit={submitForm}\n            userInfo={userInfo}\n            isCleanUserInfo={false}\n          />\n        </div>\n        <div className={css.sidebarBox}>\n          <SideBar date={currentDate} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default CalculatorPage;\n"],"names":["DailyCaloriesForm","_ref","onFormSubmit","_ref$userInfo","userInfo","_ref$isCleanUserInfo","isCleanUserInfo","_ref$isShowNoti","isShowNoti","_useState","useState","_useState2","_slicedToArray","isFormValid","setIsFormValid","_useState3","bloodType","_useState4","selectedBldType","setSelectedBlbType","onBldTypeSelect","event","target","value","inivialValues","height","age","currentWeight","desiredWeight","_jsx","Formik","initialValues","validate","values","onSubmit","_ref2","resetForm","user","userData","String","toast","window","scrollTo","document","body","scrollHeight","children","_jsxs","className","css","Form","htmlFor","Field","pattern","required","id","type","name","min","max","style","marginBottom","checked","onClick","Button","btnText","dispatch","useDispatch","currentDate","Date","toLocaleDateString","useSelector","authSelectors","useEffect","updateDate","diaryPerDayOperation","date","submitForm","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getUsersAdvice","stop","_x","apply","arguments","_Fragment","Header","localPage","MobileSidebar","SideBar"],"sourceRoot":""}